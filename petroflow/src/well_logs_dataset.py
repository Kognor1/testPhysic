"""Implements WellLogsDataset class."""

from ..batchflow import Dataset, FilesIndex
from .well_logs_batch import WellLogsBatch


class WellLogsDataset(Dataset):
    """A dataset, that generates batches of ``WellLogsBatch`` class. Contains
    indices of well logs and a specific ``batch_class`` to create and process
    small subsets of data.

    Parameters
    ----------
    index : DatasetIndex or None, optional
        Unique identifiers of well logs in a dataset. If ``index`` is not
        given, it is constructed by instantiating ``index_class`` with
        ``args`` and ``kwargs``.
    batch_class : type, optional
        A class of batches, generated by a dataset. Must be inherited from
        ``Batch``.
    preloaded : tuple, optional
        Data to put in created batches. Defaults to ``None``.
    index_class : type, optional
        A class to build an index if ``index`` is not given. Must be inherited
        from ``DatasetIndex``.
    args : misc, optional
        Additional positional arguments to ``index_class.__init__``.
    kwargs : misc, optional
        Additional keyword arguments to ``index_class.__init__``.
    """

    def __init__(self, index=None, batch_class=WellLogsBatch, preloaded=None, index_class=FilesIndex,
                 *args, **kwargs):
        if index is None:
            index = index_class(*args, **kwargs)
        super().__init__(index, batch_class, preloaded)
